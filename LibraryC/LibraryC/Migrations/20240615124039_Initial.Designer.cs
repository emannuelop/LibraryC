// <auto-generated />
using System;
using LibraryC.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibraryC.Migrations
{
    [DbContext(typeof(LibrarycContext))]
    [Migration("20240615124039_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LibraryC.Models.Autor", b =>
                {
                    b.Property<int>("IdAutor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_autor");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAutor"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nome");

                    b.HasKey("IdAutor")
                        .HasName("PK__autor__5FC3872DC301C732");

                    b.ToTable("autor");
                });

            modelBuilder.Entity("LibraryC.Models.Biblioteca", b =>
                {
                    b.Property<int>("IdBiblioteca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_biblioteca");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdBiblioteca"));

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("endereco");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nome");

                    b.HasKey("IdBiblioteca")
                        .HasName("PK__bibliote__1EEBBDFE281AC4B8");

                    b.ToTable("biblioteca");
                });

            modelBuilder.Entity("LibraryC.Models.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_cliente");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<string>("Cpf")
                        .HasMaxLength(14)
                        .IsUnicode(false)
                        .HasColumnType("varchar(14)")
                        .HasColumnName("cpf");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nome");

                    b.Property<string>("Telefone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("telefone");

                    b.HasKey("IdCliente")
                        .HasName("PK__cliente__677F38F5CA8CA5A3");

                    b.HasIndex(new[] { "Email" }, "UQ__cliente__AB6E616407A7B8AF")
                        .IsUnique();

                    b.HasIndex(new[] { "Cpf" }, "UQ__cliente__D836E71F90420DBC")
                        .IsUnique()
                        .HasFilter("[cpf] IS NOT NULL");

                    b.ToTable("cliente");
                });

            modelBuilder.Entity("LibraryC.Models.Emprestimo", b =>
                {
                    b.Property<int>("IdEmprestimo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_emprestimo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEmprestimo"));

                    b.Property<DateOnly?>("DataDevolucao")
                        .HasColumnType("date")
                        .HasColumnName("data_devolucao");

                    b.Property<DateOnly?>("DataEmprestimo")
                        .HasColumnType("date")
                        .HasColumnName("data_emprestimo");

                    b.Property<DateOnly?>("DataPrevistaDevolucao")
                        .HasColumnType("date")
                        .HasColumnName("data_prevista_devolucao");

                    b.Property<int?>("IdBiblioteca")
                        .HasColumnType("int")
                        .HasColumnName("id_biblioteca");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("id_cliente");

                    b.Property<int>("IdLivro")
                        .HasColumnType("int")
                        .HasColumnName("id_livro");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("status");

                    b.HasKey("IdEmprestimo")
                        .HasName("PK__empresti__45FD187E42C5A0B8");

                    b.HasIndex("IdBiblioteca");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdLivro");

                    b.ToTable("emprestimo");
                });

            modelBuilder.Entity("LibraryC.Models.Livro", b =>
                {
                    b.Property<int>("IdLivro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_livro");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLivro"));

                    b.Property<int?>("AnoPublicacao")
                        .HasColumnType("int")
                        .HasColumnName("ano_publicacao");

                    b.Property<int?>("IdAutor")
                        .HasColumnType("int")
                        .HasColumnName("id_autor");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("titulo");

                    b.HasKey("IdLivro")
                        .HasName("PK__livro__C252147DF73055FC");

                    b.HasIndex("IdAutor");

                    b.ToTable("livro");
                });

            modelBuilder.Entity("LibraryC.Models.LivroBiblioteca", b =>
                {
                    b.Property<int>("IdLivroBiblioteca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_livro_biblioteca");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLivroBiblioteca"));

                    b.Property<int?>("IdBiblioteca")
                        .HasColumnType("int")
                        .HasColumnName("id_biblioteca");

                    b.Property<int?>("IdLivro")
                        .HasColumnType("int")
                        .HasColumnName("id_livro");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int")
                        .HasColumnName("quantidade");

                    b.HasKey("IdLivroBiblioteca")
                        .HasName("PK__livro_bi__C7822DFEA5F88D41");

                    b.HasIndex("IdBiblioteca");

                    b.HasIndex("IdLivro");

                    b.ToTable("livro_biblioteca");
                });

            modelBuilder.Entity("LibraryC.Models.Multa", b =>
                {
                    b.Property<int>("IdMulta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_multa");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMulta"));

                    b.Property<DateOnly?>("Data")
                        .HasColumnType("date")
                        .HasColumnName("data");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("id_cliente");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("motivo");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("status");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("valor");

                    b.HasKey("IdMulta")
                        .HasName("PK__multa__295650BB36BC9AE5");

                    b.HasIndex("IdCliente");

                    b.ToTable("multa");
                });

            modelBuilder.Entity("LibraryC.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Cpf")
                        .HasMaxLength(14)
                        .IsUnicode(false)
                        .HasColumnType("varchar(14)")
                        .HasColumnName("cpf");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<int?>("IdBiblioteca")
                        .HasColumnType("int")
                        .HasColumnName("id_biblioteca");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nome");

                    b.Property<string>("Perfil")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("perfil");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("senha");

                    b.HasKey("IdUsuario")
                        .HasName("PK__usuario__4E3E04AD8C3DEA94");

                    b.HasIndex("IdBiblioteca");

                    b.HasIndex(new[] { "Email" }, "UQ__usuario__AB6E6164A876FDE6")
                        .IsUnique();

                    b.HasIndex(new[] { "Cpf" }, "UQ__usuario__D836E71F932DAC61")
                        .IsUnique()
                        .HasFilter("[cpf] IS NOT NULL");

                    b.ToTable("usuario");
                });

            modelBuilder.Entity("LibraryC.Models.Emprestimo", b =>
                {
                    b.HasOne("LibraryC.Models.Biblioteca", "IdBibliotecaNavigation")
                        .WithMany("Emprestimo")
                        .HasForeignKey("IdBiblioteca")
                        .HasConstraintName("FK__emprestim__id_bi__4D94879B");

                    b.HasOne("LibraryC.Models.Cliente", "IdClienteNavigation")
                        .WithMany("Emprestimo")
                        .HasForeignKey("IdCliente")
                        .IsRequired()
                        .HasConstraintName("FK__emprestim__id_cl__4E88ABD4");

                    b.HasOne("LibraryC.Models.Livro", "IdLivroNavigation")
                        .WithMany("Emprestimo")
                        .HasForeignKey("IdLivro")
                        .IsRequired()
                        .HasConstraintName("FK__emprestim__id_li__4F7CD00D");

                    b.Navigation("IdBibliotecaNavigation");

                    b.Navigation("IdClienteNavigation");

                    b.Navigation("IdLivroNavigation");
                });

            modelBuilder.Entity("LibraryC.Models.Livro", b =>
                {
                    b.HasOne("LibraryC.Models.Autor", "IdAutorNavigation")
                        .WithMany("Livro")
                        .HasForeignKey("IdAutor")
                        .HasConstraintName("FK__livro__id_autor__46E78A0C");

                    b.Navigation("IdAutorNavigation");
                });

            modelBuilder.Entity("LibraryC.Models.LivroBiblioteca", b =>
                {
                    b.HasOne("LibraryC.Models.Biblioteca", "IdBibliotecaNavigation")
                        .WithMany("LivroBiblioteca")
                        .HasForeignKey("IdBiblioteca")
                        .HasConstraintName("FK__livro_bib__id_bi__4AB81AF0");

                    b.HasOne("LibraryC.Models.Livro", "IdLivroNavigation")
                        .WithMany("LivroBiblioteca")
                        .HasForeignKey("IdLivro")
                        .HasConstraintName("FK__livro_bib__id_li__49C3F6B7");

                    b.Navigation("IdBibliotecaNavigation");

                    b.Navigation("IdLivroNavigation");
                });

            modelBuilder.Entity("LibraryC.Models.Multa", b =>
                {
                    b.HasOne("LibraryC.Models.Cliente", "IdClienteNavigation")
                        .WithMany("Multa")
                        .HasForeignKey("IdCliente")
                        .IsRequired()
                        .HasConstraintName("FK__multa__id_client__4222D4EF");

                    b.Navigation("IdClienteNavigation");
                });

            modelBuilder.Entity("LibraryC.Models.Usuario", b =>
                {
                    b.HasOne("LibraryC.Models.Biblioteca", "IdBibliotecaNavigation")
                        .WithMany("Usuario")
                        .HasForeignKey("IdBiblioteca")
                        .HasConstraintName("FK__usuario__id_bibl__3B75D760");

                    b.Navigation("IdBibliotecaNavigation");
                });

            modelBuilder.Entity("LibraryC.Models.Autor", b =>
                {
                    b.Navigation("Livro");
                });

            modelBuilder.Entity("LibraryC.Models.Biblioteca", b =>
                {
                    b.Navigation("Emprestimo");

                    b.Navigation("LivroBiblioteca");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("LibraryC.Models.Cliente", b =>
                {
                    b.Navigation("Emprestimo");

                    b.Navigation("Multa");
                });

            modelBuilder.Entity("LibraryC.Models.Livro", b =>
                {
                    b.Navigation("Emprestimo");

                    b.Navigation("LivroBiblioteca");
                });
#pragma warning restore 612, 618
        }
    }
}
